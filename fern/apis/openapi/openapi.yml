openapi: 3.1.0
info:
  title: Deepgram API Specification
  description: |
    Deepgram's voice AI platform provides APIs for speech-to-text, text-to-speech,  and language understanding. From medical transcription to autonomous agents, Deepgram  is the go-to choice for developers of voice AI experiences.
    The Deepgram API allows you to interact with Deepgram programmatically. 
    You can use our API to: - Transcribe speech to text. - Transform text to speech. - Analyze text. - Administer your Deepgram account.
  termsOfService: https://deepgram.com/terms/
  contact:
    email: devrel@deepgram.com
    url: https://community.deepgram.com
    name: Deepgram Developer Relations
  license:
    name: Privacy Notice
    url: https://deepgram.com/privacy/
  version: 1.0.0
security:
  - Authorization: []
tags:
  - name: Speech to Text
    description: Power your apps with world-class speech recognition
    externalDocs:
      description: Find out more
      url: https://deepgram.com/product/speech-to-text
externalDocs:
  description: Learn more about using Deepgram on our docs.
  url: http://developers.deepgram.com
paths:
  /v1/listen:
    description: Use Deepgram's speech-to-text API to transcribe and analyze pre-recorded audio.
    post:
      tags:
        - Speech to Text
      summary: Transcribe audio
      operationId: listen
      requestBody:
        description: Transcribe an audio file
        content:
          application/json:
            schema:
              required:
                - url
              type: object
              description: Audio file to transcribe
              properties:
                url:
                  type: string
                  format: uri
                  example: https://dpgr.am/spacewalk.wav
            example:
              url: https://dpgr.am/spacewalk.wav
          video:
            schema:
              type: string
              format: binary
          audio:
            schema:
              type: string
              format: binary
        required: true
      parameters:
        - $ref: '#/components/parameters/callback'
        - $ref: '#/components/parameters/callback_method'
        - $ref: '#/components/parameters/detect_entities'
        - $ref: '#/components/parameters/detect_language'
        - $ref: '#/components/parameters/diarize_version'
        - $ref: '#/components/parameters/diarize'
        - $ref: '#/components/parameters/dictation'
        - $ref: '#/components/parameters/encoding'
        - $ref: '#/components/parameters/filler_words'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/language'
        - $ref: '#/components/parameters/measurements'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/multichannel'
        - $ref: '#/components/parameters/numerals'
        - $ref: '#/components/parameters/paragraphs'
        - $ref: '#/components/parameters/profanity_filter'
        - $ref: '#/components/parameters/punctuate'
        - $ref: '#/components/parameters/redact'
        - $ref: '#/components/parameters/replace'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sentiment'
        - $ref: '#/components/parameters/smart_format'
        - $ref: '#/components/parameters/summarize'
        - $ref: '#/components/parameters/topics'
        - $ref: '#/components/parameters/custom_topic'
        - $ref: '#/components/parameters/custom_topic_mode'
        - $ref: '#/components/parameters/intents'
        - $ref: '#/components/parameters/custom_intent'
        - $ref: '#/components/parameters/custom_intent_mode'
        - $ref: '#/components/parameters/utterances'
        - $ref: '#/components/parameters/utt_split'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/extra'
      responses:
        '200':
          description: Successful transcription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        '400':
          description: Error
      callbacks:
        transcriptionCallback:
          '{$request.query.callback}':
            post:
              requestBody:
                required: true
                content:
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/response'
              responses:
                '200':
                  description: We expect a 200 to determine whether the callback was successfully received
  /v1/projects:
    get:
      summary: Retrieves basic information about the projects associated with the API key.
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        project_id:
                          type: string
                          description: The unique identifier of the project
                        name:
                          type: string
                          description: The name of the project
        '403':
          $ref: '#/components/responses/authentication_failed'
  /v1/projects/{project_id}:
    get:
      summary: Retrieves information about the specified project.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: string
                    description: The unique identifier of the project
                  name:
                    type: string
                    description: The name of the project
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    patch:
      summary: Updates the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
      requestBody:
        description: The name of the project
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project
              example:
                name: My Project
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully updated project info.
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    delete:
      summary: Deletes the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully deleted a project.
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/balances:
    get:
      summary: Generates a list of outstanding balances for the specified project.
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of outstanding balances
          content:
            application/json:
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        balance_id:
                          type: string
                          description: The unique identifier of the balance
                        amount:
                          type: number
                          default: 0
                          description: The amount of the balance
                        units:
                          type: string
                          description: The units of the balance, such as "USD"
                        purchase_order_id:
                          type: string
                          description: Description or reference of the purchase
              example:
                balances:
                  - balance_id: b123456-7890-1234-5678-901234
                    amount: 250.12
                    units: usd
                    purchase_order_id: b123456-7890-1234-5678-901234
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/balances/{balance_id}:
    get:
      summary: Retrieves details about the specified balance.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/balance_id'
      responses:
        '200':
          description: A specific balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance_id:
                    type: string
                    description: The unique identifier of the balance
                  amount:
                    type: number
                    default: 0
                    description: The amount of the balance
                  units:
                    type: string
                    description: The units of the balance, such as "USD"
                  purchase_order_id:
                    type: string
                    description: Description or reference of the purchase
              example:
                balance_id: b123456-7890-1234-5678-901234
                amount: 250.12
                units: usd
                purchase_order_id: b123456-7890-1234-5678-901234
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/models:
    get:
      x-fern-ignore: true
      summary: Returns metadata on all the latest models that a specific project has access to, including non-public models.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/include_outdated'
      responses:
        '200':
          description: A list of models
          content:
            application/json:
              schema:
                type: object
                properties:
                  stt:
                    type: array
                    items:
                      $ref: '#/components/schemas/stt_models'
                  tts:
                    type: array
                    items:
                      $ref: '#/components/schemas/tts_models'
        '400':
          $ref: '#/components/responses/bad_request'
  /v1/projects/{project_id}/models/{model_id}:
    get: 
      summary: Returns metadata for a specific model.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: A specific model
          content:
            application/json:
              oneOf:
                - $ref: '#/components/schemas/stt_models'
                - $ref: '#/components/schemas/tts_models'
        '400':
          $ref: '#/components/responses/bad_request'
  /v1/projects/{project_id}/keys:
    get:
      summary: Returns a list of API keys for a specific project.
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
        description: A list of API keys
        content:
          application/json:
            schema:
              type: object
              properties:
                type: array
                items:
                  $ref: '#/components/schemas/keys'
    post:
      x-fern-ignore: true
      summary: Creates a new API key for a specific project.
      parameters:
        - $ref: '#/components/parameters/project_id'
      requestBody:
        description: The API key settings
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: A comment for the API key
                scopes:
                  type: array
                  description: The scopes for the API key
                  items:
                    type: string
                tags:
                  type: array
                  description: The tags for the API key
                  items:
                    type: string
                expiration_date:
                  type: string
                  format: date
                  description: The expiration date for the API key
                time_to_live_in_seconds:
                  type: integer
                  description: The time to live in seconds for the API key
              example:
                comment: A comment
                scopes: admin
                tags: tag-1
                expiration_date: '2024-05-01T00:00:00.000000Z'
                time_to_live_in_seconds: '3600'
      responses:
        '200':
          $ref: '#/components/responses/key_created'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/keys/{key_id}/keys:
    get:
      summary: Retrieves information about a specified API key,
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/key_id'
      responses:
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
        description: A specific API key
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  $ref: '#/components/schemas/key'
    delete:
      summary: Deletes an API key for a specific project.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/key_id'
      responses:
        '200':
          description: API key deleted
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that the API key was deleted
                example:
                  message: Successfully deleted the API key!
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/members:
    get:
      summary: Retrieves a list of account objects for a specific project.
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of account objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        member_id:
                          type: string
                          description: The unique identifier of the member
                          scopes:
                            type: array
                            description: The API scopes of the member
                          email:
                            type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/members/{member_id}:
    delete:
      summary: Removes the specified member from a project.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          '403':
            $ref: '#/components/responses/authentication_failed'
          '404':
            $ref: '#/components/responses/project_not_found'
          description: Delete the specific member from the project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully removed account from project.
  /v1/projects/{project_id}/members/{member_id}/scopes:
    get:
      summary: Retrieves a list of scopes for a specific member.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          description: A list of scopes for a specific member
          content:
            application/json:
              schema:
                type: object
                properties: 
                  scopes:
                    type: array
                    description: The API scopes of the member
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    put:
      summary: Updates the scopes for a specific member.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: A scope to update
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: string
                  description: A scope to update
                example: admin
      responses:
        '200': 
          description: Updated the scopes for a specific member
          content:
          application/json:
            '403':
              $ref: '#/components/responses/authentication_failed'
            '404':
              $ref: '#/components/responses/project_not_found'
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: confirmation message
              example: Successfully updated the account scopes.
  /v1/projects/{project_id}/invites:
    get:
      summary: Generates a list of invites for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of invites for a specific project
          content:
            application/json:
              schema:
                type: object
                properties:
                  invites:
                    type: array
                    properties:
                      email:
                        type: string
                        description: The email address of the invitee
                      scope:
                        type: string
                        description: The scope of the invitee
    post:
      '400':
        $ref: '#/components/responses/invalid_request'
      '401':
        $ref: '#/components/responses/unauthorized'
      '403':
        $ref: '#/components/responses/authentication_failed'
      '404':
        $ref: '#/components/responses/project_not_found'
      summary: Generates an invite for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      requestBody:
        description: email to invite to the project
        content:
          application/json:
            schema:
              type: object
            properties: 
              email:
                type: string
                description: The email address of the invitee
              scope:
                type: string
                description: The scope of the invitee
      responses:
        '200':
          description: The invite was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
  /v1/projects/{project_id}/invites/{email}:
    delete:
      summary: Deletes an invite for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/email'
      responses:
        '200':
          description: The invite was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    description: confirmation message
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/leave:
    delete:
      summary: Removes the authenticated account from the specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: Successfully removed account from project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    description: confirmation message
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
components:
  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization
      description: Specify the token value with the `Token ` prefix, e.g. "Token DEEPGRAM_API_KEY".
  parameters:
    callback:
      name: callback
      in: query
      required: false
      description: URL to which we'll make the callback request
      schema:
        type: string
      example: https://example.com
    callback_method:
      name: callback_method
      in: query
      required: false
      description: HTTP method by which the callback request will be made
      schema:
        default: POST
        enum:
          - POST
          - PUT
      example: PUT
    detect_entities:
      name: detect_entities
      in: query
      required: false
      description: Identifies and extracts key entities from content in submitted audio
      schema:
        default: false
        type: boolean
      example: true
    detect_language:
      name: detect_language
      in: query
      required: false
      description: Identifies the dominant language spoken in submitted audio
      schema:
        oneOf:
          - type: boolean
            default: false
            example: true
          - type: array
            items:
              type: string
        example:
          - en
          - fr
      style: form
      explode: true
    diarize_version:
      name: diarize_version
      in: query
      required: false
      description: Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API).
      schema:
        type: string
    diarize:
      name: diarize
      in: query
      required: false
      description: Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0
      schema:
        default: false
        type: boolean
      example: true
    dictation:
      name: dictation
      in: query
      required: false
      description: Identify and extract key entities from content in submitted audio
      schema:
        default: false
        type: boolean
      example: true
    encoding:
      name: encoding
      in: query
      required: false
      description: Specify the expected encoding of your submitted audio
      schema:
        type: string
        enum:
          - linear16
          - flac
          - mulaw
          - amr-nb
          - amr-wb
          - opus
          - speex
          - g729
      example: linear16
    filler_words:
      name: filler_words
      in: query
      required: false
      description: Filler Words can help transcribe interruptions in your audio, like "uh" and "um"
      schema:
        default: false
        type: boolean
      example: true
    keywords:
      name: keywords
      in: query
      required: false
      description: Keywords can boost or suppress specialized terminology and brands
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      style: form
      explode: true
      example:
        - Twilio:2
        - Algolia
    language:
      name: language
      in: query
      required: false
      description: The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language
      schema:
        default: en
        oneOf:
          - type: string
            title: Nova 2 model languages
            enum:
              - bg
              - ca
              - cz
              - da
              - da-DK
              - nl
              - en
              - en-US
              - en-AU
              - en-GB
              - en-NZ
              - en-IN
              - et
              - fi
              - nl-BE
              - fr
              - fr-CA
              - de
              - de-CH
              - el
              - hi
              - hi-Latn
              - hu
              - id
              - it
              - ja
              - ko
              - ko-KR
              - lv
              - lt
              - ms
              - 'no'
              - pl
              - pt
              - pt-BR
              - ro
              - ru
              - sk
              - es
              - es-419
              - sv
              - sv-SE
              - th
              - th-TH
              - tr
              - uk
              - vi
          - type: string
            title: Nova model languages
            enum:
              - en
              - en-US
              - en-AU
              - en-GB
              - en-NZ
              - en-IN
              - es
              - es-419
          - type: string
            title: Enhanced model languages
            description: Recommended for lower word error rates than Base, high accuracy timestamps, and use cases that require keyword boosting.
            enum:
              - da
              - nl
              - en
              - en-US
              - nl
              - fr
              - de
              - hi
              - hi-Latn
              - id
              - it
              - ja
              - ko
              - 'no'
              - pl
              - pt
              - pt-BR
              - ru
              - es
              - es-419
              - es-LATAM
              - sv
              - taq
              - tr
              - uk
          - type: string
            title: Base model languages.
            description: Recommended for large transcription volumes and high accuracy timestamps.
            enum:
              - zh
              - zh-CN
              - zh-TW
              - da
              - nl
              - en
              - en-US
              - nl
              - fr
              - fr-CA
              - de
              - hi
              - hi-Latn
              - id
              - it
              - ja
              - ko
              - 'no'
              - pl
              - pt
              - pt-BR
              - ru
              - es
              - es-419
              - es-LATAM
              - sv
              - taq
              - tr
              - uk
      example:
        - en
    measurements:
      name: measurements
      in: query
      required: false
      description: Spoken measurements will be converted to their corresponding abbreviations
      schema:
        default: false
        type: boolean
      example: true
    model:
      name: model
      in: query
      required: false
      description: AI model used to process submitted audio
      schema:
        default: base-general
        oneOf:
          - type: string
            description: Our public models available to all accounts
            enum:
              - nova-2
              - nova-2-general
              - nova-2-meeting
              - nova-2-finance
              - nova-2-conversationalai
              - nova-2-voicemail
              - nova-2-video
              - nova-2-medical
              - nova-2-drivethru
              - nova-2-automotive
              - nova
              - nova-general
              - nova-phonecall
              - nova-medical
              - enhanced
              - enhanced-general
              - enhanced-meeting
              - enhanced-phonecall
              - enhanced-finance
              - base
              - meeting
              - phonecall
              - finance
              - conversationalai
              - voicemail
              - video
          - type: string
            description: Custom string if you've had a model trained by Deepgram
      example:
        - nova-2
    multichannel:
      name: multichannel
      in: query
      required: false
      description: Transcribe each audio channel independently
      schema:
        default: false
        type: boolean
      example: true
    numerals:
      name: numerals
      in: query
      required: false
      description: Numerals converts numbers from written format to numerical format
      schema:
        default: false
        type: boolean
      example: true
    paragraphs:
      name: paragraphs
      in: query
      required: false
      description: Splits audio into paragraphs to improve transcript readability
      x-dg-description: Paragraphs are defined as groups of words that are separated by pauses in the audio. This is done in the following ways; - When Paragraphs is enabled, the `punctuate` feature is enabled by default, and paragraphs are identified based on the transcript's punctuation - When the `diarize` feature is enabled and multiple speakers are present, paragraphs breaks are influenced by speaker changes - When the `multichannel` feature is enabled, paragraphs breaks are influenced by channel changes
      schema:
        default: false
        type: boolean
      example: true
    profanity_filter:
      name: profanity_filter
      in: query
      required: false
      description: Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely
      schema:
        default: false
        type: boolean
      example:
        - true
    punctuate:
      name: punctuate
      in: query
      required: false
      description: Add punctuation and capitalization to the transcript
      schema:
        default: false
        type: boolean
      example:
        - true
    redact:
      name: redact
      in: query
      required: false
      description: Redaction removes sensitive information from your transcripts
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
              enum:
                - pci
                - pii
                - numbers
            maxItems: 100
      style: form
      explode: true
      example:
        - pii
        - pci
    replace:
      name: replace
      in: query
      required: false
      description: Search for terms or phrases in submitted audio and replaces them
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      style: form
      explode: true
      example:
        - monika:Monica
        - jon:John
    search:
      name: search
      in: query
      required: false
      description: Search for terms or phrases in submitted audio
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      style: form
      explode: true
      example:
        - Deepgram
        - Text to Speech
    sentiment:
      name: sentiment
      in: query
      required: false
      description: Recognizes the sentiment throughout a transcript
      schema:
        default: false
        type: boolean
      example:
        - true
    smart_format:
      name: smart_format
      in: query
      required: false
      description: Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability
      schema:
        default: false
        type: boolean
      example: true
    summarize:
      name: summarize
      in: query
      required: false
      description: Summarize content
      schema:
        default: false
        oneOf:
          - title: Versions
            type: string
            enum:
              - v2
              - v1
          - title: Legacy
            type: boolean
      example:
        - v2
    topics:
      name: topics
      in: query
      required: false
      description: Detect topics throughout a transcript
      schema:
        default: false
        type: boolean
      example:
        - true
    custom_topic:
      name: custom_topic
      in: query
      required: false
      description: Custom topics you want the model to detect within your input audio if present. Submit up to 100.
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
            maxItems: 100
      style: form
      explode: true
      example:
        - unsubscribe
        - account%20deletion
    custom_topic_mode:
      name: custom_topic_mode
      in: query
      required: false
      description: Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param.
      schema:
        default: extended
        type: string
        enum:
          - extended
          - strict
      example: strict
    intents:
      name: intents
      in: query
      required: false
      description: Recognizes speaker intent throughout a transcript
      schema:
        default: false
        type: boolean
      example:
        - true
    custom_intent:
      name: custom_intent
      in: query
      required: false
      description: Custom intents you want the model to detect within your input audio if present.
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
            maxItems: 100
      style: form
      explode: true
      example:
        - unsubscribe
        - account%20deletion
    custom_intent_mode:
      name: custom_intent_mode
      in: query
      required: false
      description: Sets how the model will interpret intents submitted to the `custom_intent` param. When `strict`, the model will only return intents submitted using the `custom_intent` param. When `extended`, the model will return its own detected intents in addition those submitted using the `custom_intents` param.
      schema:
        default: extended
        type: string
        enum:
          - extended
          - strict
      example: strict
    utterances:
      name: utterances
      in: query
      required: false
      description: Segments speech into meaningful semantic units
      schema:
        default: false
        type: boolean
      example: true
    utt_split:
      name: utt_split
      in: query
      required: false
      description: Seconds to wait before detecting a pause between words in submitted audio
      schema:
        default: 0.8
        type: number
      example:
        - 1.2
    version:
      name: version
      in: query
      required: false
      description: Version of an AI model to use
      schema:
        default: latest
        oneOf:
          - type: string
            description: Use the latest version of a model
            enum:
              - latest
          - type: string
            description: Use a previous version of a model
      example:
        - latest
    tag:
      name: tag
      in: query
      required: false
      description: Label your requests for the purpose of identification during usage reporting
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      style: form
      explode: true
      example:
        - test
    extra:
      name: extra
      in: query
      required: false
      description: Arbitrary key-value pairs that are attached to the API response for usage in downstream processing
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      style: form
      explode: true
      example:
        - key:value
        - user:1234567890
    project_id:
      name: project_id
      in: path
      required: true
      description: The unique identifier of the project.
      schema:
        type: string
      example: 123456-7890-1234-5678-901234
    limit:
      name: limit
      in: query
      required: false
      default: 10
      minimum: 1
      maximum: 1000
      description: Number of results to return per page. Default 10. Range [1,100]
      type: integer
      example: '10'
    start:
      name: start
      in: query
      required: false
      description: Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
      type: string
      format: date
      example: '2024-07-01T00:00:00'
    end:
      name: end
      in: query
      required: false
      description: End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
      type: string
      format: date
      example: '2024-07-31T00:00:00'
    page:
      name: page
      in: query
      required: false
      description: Navigate and return the results to retrieve specific portions of information of the response.
      type: integer
      example: '10'
    balance_id:
      name: balance_id
      in: path
      required: true
      description: The unique identifier of the balance.
      schema:
        type: string
      example: 123456-7890-1234-5678-901234
    include_outdated:
      name: include_outdated
      in: query
      required: true
      description: returns non-latest versions of models.
      schema:
        type: boolean
      example: true
    model_id:
      name: model_id
      in: path
      required: true
      description: The specific UUID of the model.
      schema:
        type: string
      example: af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291
    key_id:
      name: key_id
      in: path
      required: true
      description: The unique identifier of the API key.
      schema:
        type: string
      example: '123456789012345678901234'
    member_id:
      name: member_id
      in: path
      required: true
      description: The unique identifier of the Member.
      schema:
        type: string
      example: '123456789012345678901234'
    email:
      name: email
      in: path
      required: true
      description: The email address of the member
      schema:
        type: string
      example: john.doe@example.com
  schemas:
    metadata:
      required:
        - request_id
        - sha256
        - created
        - duration
        - channels
        - models
        - model_info
      type: object
      properties:
        transaction_key:
          type: string
          default: deprecated
          deprecated: true
        request_id:
          type: string
          format: uuid
          example: a847f427-4ad5-4d67-9b95-db801e58251c
        sha256:
          type: string
          example: 154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33
        created:
          type: string
          format: date-time
          example: '2024-05-12T18:57:13.426Z'
        duration:
          type: number
          example: 25.933313
        channels:
          type: number
          example: 1
        models:
          type: array
          items:
            type: string
          example:
            - 30089e05-99d1-4376-b32e-c263170674af
        model_info:
          type: object
          patternProperties:
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$:
              type: object
              properties:
                name:
                  type: string
                version:
                  type: string
                arch:
                  type: string
          additionalProperties: false
          example:
            30089e05-99d1-4376-b32e-c263170674af:
              name: 2-general-nova
              version: 2024-01-09.29447
              arch: nova-2
        summary_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 67875a7f-c9c4-48a0-aa55-5bdb8a91c34a
            input_tokens:
              type: number
              example: 95
            output_tokens:
              type: number
              example: 63
        sentiment_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 80ab3179-d113-4254-bd6b-4a2f96498695
            input_tokens:
              type: number
              example: 105
            output_tokens:
              type: number
              example: 105
        topics_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 80ab3179-d113-4254-bd6b-4a2f96498695
            input_tokens:
              type: number
              example: 105
            output_tokens:
              type: number
              example: 7
        intents_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 80ab3179-d113-4254-bd6b-4a2f96498695
            input_tokens:
              type: number
              example: 105
            output_tokens:
              type: number
              example: 4
        tags:
          type: array
          items:
            type: string
            example: test
    channels:
      type: array
      items:
        type: object
        properties:
          search:
            type: array
            items:
              type: object
              properties:
                query:
                  type: string
                hits:
                  type: array
                  items:
                    type: object
                    properties:
                      confidence:
                        type: number
                        format: float
                      start:
                        type: number
                        format: float
                      end:
                        type: number
                        format: float
                      snippet:
                        type: string
          alternatives:
            type: array
            items:
              type: object
              properties:
                transcript:
                  type: string
                confidence:
                  type: number
                  format: float
                words:
                  type: array
                  items:
                    type: object
                    properties:
                      word:
                        type: string
                      start:
                        type: number
                        format: float
                      end:
                        type: number
                        format: float
                      confidence:
                        type: number
                        format: float
                paragraphs:
                  type: object
                  properties:
                    transcript:
                      type: string
                    paragraphs:
                      type: array
                      items:
                        type: object
                        properties:
                          sentences:
                            type: array
                            items:
                              type: object
                              properties:
                                text:
                                  type: string
                                start:
                                  type: number
                                  format: float
                                end:
                                  type: number
                                  format: float
                          speaker:
                            type: integer
                            format: int32
                          num_words:
                            type: integer
                            format: int32
                          start:
                            type: number
                            format: float
                          end:
                            type: number
                            format: float
                summaries:
                  type: array
                  items:
                    type: object
                    properties:
                      summary:
                        type: string
                      start_word:
                        type: integer
                        format: int32
                      end_word:
                        type: integer
                        format: int32
                topics:
                  type: array
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                      start_word:
                        type: integer
                        format: int32
                      end_word:
                        type: integer
                        format: int32
                      topics:
                        type: array
                        items:
                          type: string
          detected_language:
            type: string
    utterances:
      type: array
      items:
        type: object
        properties:
          start:
            type: number
            format: float
          end:
            type: number
            format: float
          confidence:
            type: number
            format: float
          channel:
            type: integer
            format: int32
          transcript:
            type: string
          words:
            type: array
            items:
              type: object
              properties:
                word:
                  type: string
                start:
                  type: number
                  format: float
                end:
                  type: number
                  format: float
                confidence:
                  type: number
                  format: float
                speaker:
                  type: integer
                  format: int32
                speaker_confidence:
                  type: integer
                  format: int32
                punctuated_word:
                  type: string
          speaker:
            type: integer
            format: int32
          id:
            type: string
            format: uuid
    summary:
      type: object
      properties:
        result:
          type: string
          example: success
        short:
          type: string
          example: Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past.
    topics:
      type: object
      description: Output whenever `topics=true` is used.
      properties:
        segments:
          type: array
          items:
            - type: object
              properties:
                text:
                  type: string
                  example: And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.
                start_word:
                  type: number
                  example: 32
                end_word:
                  type: number
                  example: 69
                topics:
                  type: array
                  items:
                    - type: object
                      properties:
                        topic:
                          type: string
                          example: Spacewalk
                        confidence_score:
                          type: number
                          example: 0.91581345
                  example:
                    - topic: Spacewalk
                      confidence_score: 0.91581345
                    - topic: Women's skill and qualifications
                      confidence_score: 0.00075203663
    intents:
      type: object
      description: Output whenever `intents=true` is used.
      properties:
        segments:
          type: array
          items:
            - type: object
              properties:
                text:
                  type: string
                  example: And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.
                start_word:
                  type: number
                  example: 32
                end_word:
                  type: number
                  example: 69
                intents:
                  type: array
                  items:
                    - type: object
                      properties:
                        intent:
                          type: string
                          example: Honor women and recognize women
                        confidence_score:
                          type: number
                          example: 0.0037266621
                  example:
                    - intent: Honor women and recognize women
                      confidence_score: 0.0037266621
    sentiments:
      type: object
      description: Output whenever `sentiment=true` is used.
      properties:
        segments:
          type: array
          items:
            - type: object
              properties:
                text:
                  type: string
                  example: Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.
                start_word:
                  type: number
                  example: 0
                end_word:
                  type: number
                  example: 69
                sentiment:
                  type: string
                  example: positive
                sentiment_score:
                  type: number
                  example: 0.5810546875
        average:
          type: object
          properties:
            sentiment:
              type: string
              example: positive
            sentiment_score:
              type: number
              example: 0.5810185185185185
    results:
      required:
        - channels
      type: object
      properties:
        channels:
          $ref: '#/components/schemas/channels'
        utterances:
          $ref: '#/components/schemas/utterances'
        summary:
          $ref: '#/components/schemas/summary'
        topics:
          $ref: '#/components/schemas/topics'
        intents:
          $ref: '#/components/schemas/intents'
        sentiments:
          $ref: '#/components/schemas/sentiments'
    response:
      description: The standard transcription response.
      required:
        - metadata
        - results
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          x-collapse: true
        results:
          $ref: '#/components/schemas/results'
    stt_models:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: conversationalai
          canonical_name:
            type: string
            example: conversationalai
          architecture:
            type: string
            example: base
          languages:
            type: array
            items:
              type: string
              example:
                - en
                - en-us
          version:
            type: string
            example: 2021-11-10.1
          uuid:
            type: string
            example: 6b28e919-8427-4f32-9847-492e2efd7daf
          batch:
            type: boolean
            example: true
          streaming:
            type: boolean
            example: true
          formatted_output:
            type: boolean
            example: true
    tts_models:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: zeus
          canonical_name:
            type: string
            example: aura-zeus-en
          architecture:
            type: string
            example: aura
          languages:
            type: array
            items:
              type: string
              example:
                - en
                - en-us
          version:
            type: string
            example: 2024-07-30.0
          uuid:
            type: string
            example: 9c28bce5-f144-4d32-9034-843aa7aed63e
          metadata:
            type: object
            properties:
              accent:
                type: string
                example: American
              color:
                type: string
                example: '#949498'
              image:
                type: string
                example: https://static.deepgram.com/examples/avatars/zeus.jpg
              sample:
                type: string
                example: https://static.deepgram.com/examples/voices/zeus.wav
              tags:
                type: array
                items:
                  type: string
                  example:
                    - masculine
                    - neutral
  responses:
    authentication_failed:
      components:
        responses:
          authenticationFailed:
            description: Authentication failed
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    category:
                      type: string
                      description: The category of the error.
                    message:
                      type: string
                      description: A message about the error.
                    details:
                      type: string
                      description: A description of the error.
                    request_id:
                      type: string
                      description: The unique identifier of the request.
                example:
                  category: UNAUTHORIZED
                  message: Authentication failed.
                  details: Check that you are using the correct credentials.
                  request_id: 123456-7890-1234-5678-901234
    bad_request:
      components:
        responses:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
    project_not_found:
      components:
        responses:
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                    description: The category of the error.
                  details:
                    type: string
                    description: A description of the error.
                  message:
                    type: string
                    description: A message about the error.
                  request_id:
                    type: string
                    description: The unique identifier of the request.
              example:
                category: NOT_FOUND
                message: A project with the submitted ID cannot be found.
                details: Check that you have submitted the intended project ID and that the project has not been deleted.
                request_id: 123456-7890-1234-5678-901234
    invalid_request:
      components:
        responses:
          description: Invalid Request
          content:
            text/plain:
              schema:
                type: string
                example: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
    unauthorized:
      components:
        responses:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: User does not have sufficient permissions.
servers:
  - url: https://api.deepgram.com/
    x-fern-server-name: Production
    description: Deepgram Production API